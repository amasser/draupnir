#!/usr/bin/env bash

# USAGE:
#   draupnir-finalise-image IMAGE_ID PORT
#
# draupnir-finalise-image does the following things:
# 1. Removes old pid files and sets the correct permissions to boot postgres
# 2. Boots postgres
# 3. Runs the anonymisation function(s)
# 4. Stops postgres
# 5. Takes a BTRFS snapshot of the directory

set -e
set -u
set -o pipefail

PG_CTL=/usr/lib/postgresql/9.4/bin/pg_ctl
PSQL=/usr/bin/psql

ROOT=$1
ID=$2
PORT=$3
ANON_FILE=$4

# TODO: validate input

UPLOAD_PATH="${ROOT}/image_uploads/${ID}"
SNAPSHOT_PATH="${ROOT}/image_snapshots/${ID}"

set -x

sudo mkdir "${UPLOAD_PATH}/tmp"
sudo sh -c "tar xf ${UPLOAD_PATH}/*.tar -C ${UPLOAD_PATH}/tmp"
sudo sh -c "mv ${UPLOAD_PATH}/tmp/* ${UPLOAD_PATH}/"
sudo rmdir "${UPLOAD_PATH}/tmp"

sudo rm -f "${UPLOAD_PATH}/postmaster.*"
sudo chown -R postgres "$UPLOAD_PATH"
sudo chmod 700 "$UPLOAD_PATH"

# Install our own postgresql.conf
echo > "${UPLOAD_PATH}/postgresql.conf" <<- EOF
data_directory = '$UPLOAD_PATH'
datestyle = 'iso, mdy'
default_text_search_config = 'pg_catalog.english'
hba_file = '${UPLOAD_PATH}/pg_hba.conf'
ident_file = '${UPLOAD_PATH}/pg_ident.conf'
lc_messages = 'C'
listen_addresses = '*'
log_autovacuum_min_duration = 0
log_checkpoints = 'on'
log_connections = 'on'
log_disconnections = 'on'
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a '
log_lock_waits = 'on'
log_min_duration_statement = 500
log_temp_files = 0
maintenance_work_mem = '256MB'
max_connections = 150
shared_preload_libraries = 'pg_stat_statements'
ssl = on
ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'
work_mem = '128MB'
hot_standby = 'on'
wal_level = 'hot_standby'
EOF

# Start postgres
sudo -u postgres $PG_CTL -w -D "$UPLOAD_PATH" -o "-p $PORT" -l "/var/log/postgresql/image_$ID" start

# Create a user
sudo -u postgres createuser --port="$PORT" -d -r -s draupnir

# Anonymise
echo "Executing anonymisation script $ANON_FILE"
sudo cat "$ANON_FILE"
sudo cat "$ANON_FILE" | "$PSQL" -p "$PORT" --username=draupnir postgres

sudo -u postgres $PG_CTL -D "$UPLOAD_PATH" stop
sudo rm -f "${UPLOAD_PATH}/postmaster.*"

# Install our own pg_hba.conf
printf "local\tall\tall\t\ttrust\nhost\tall\tall\t0.0.0.0/0\ttrust\n" | sudo tee "${UPLOAD_PATH}/pg_hba.conf"

btrfs subvolume snapshot "$UPLOAD_PATH" "$SNAPSHOT_PATH"

set +x
