#!/usr/bin/env bash

# USAGE:
#   draupnir-finalise-image IMAGE_ID PORT
#
# draupnir-finalise-image does the following things:
# 1. Removes old pid files and sets the correct permissions to boot postgres
# 2. Boots postgres
# 3. Runs the anonymisation function(s)
# 4. Stops postgres
# 5. Takes a BTRFS snapshot of the directory

set -e
set -u
set -o pipefail

ROOT=/var/btrfs
PG_CTL=/usr/lib/postgresql/9.4/bin/pg_ctl
PSQL=/usr/bin/psql

ID=$1
PORT=$2
ANON_FILE=$3

# TODO: validate input

UPLOAD_PATH="${ROOT}/image_uploads/${ID}"
SNAPSHOT_PATH="${ROOT}/image_snapshots/${ID}"

set -x

sudo mkdir "${UPLOAD_PATH}/tmp"
sudo sh -c "tar xf ${UPLOAD_PATH}/*.tar -C ${UPLOAD_PATH}/tmp"
sudo sh -c "mv ${UPLOAD_PATH}/tmp/* ${UPLOAD_PATH}/"
sudo rmdir "${UPLOAD_PATH}/tmp"

sudo rm -f "${UPLOAD_PATH}/postmaster.*"
sudo chown -R postgres "$UPLOAD_PATH"
sudo chmod 700 "$UPLOAD_PATH"
sudo -u postgres $PG_CTL -w -D "$UPLOAD_PATH" -o "-p $PORT" -l /dev/null start

# Create a user
sudo -u postgres createuser --port="$PORT" -d -r -s draupnir

# Anonymise
cat "$ANON_FILE" | $PSQL -p $PORT --username=draupnir postgres

sudo -u postgres $PG_CTL -D "$UPLOAD_PATH" stop
sudo rm -f "${UPLOAD_PATH}/postmaster.*"

# Install our own pg_hba.conf
printf "local\tall\tall\t\ttrust\nhost\tall\tall\t0.0.0.0/0\ttrust\n" | sudo tee "${UPLOAD_PATH}/pg_hba.conf"

btrfs subvolume snapshot "$UPLOAD_PATH" "$SNAPSHOT_PATH"

set +x
